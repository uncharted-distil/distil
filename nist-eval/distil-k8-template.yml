# ---------------------------------------------------------
# TA3 Kubernetes Pod Stub File
# ---------------------------------------------------------
## Specifications
# * Assumes a web service over ports 80 (http) and 443 https
# * Assumes a listening port 5001 to listen to TA2 signals
# * In this speicification, the ta3-main container has the web ports
# but one can have a separate container handle the web ports
# that is not the TA3-main container
---
# Web Port Service (perhaps Nginx)
apiVersion: v1
kind: Service
metadata:
  name: {% if nist_deploy %}{{ '{{ eval_id }}-ta3-web' }}{% else %}{{ eval_id }}-ta3-web{% endif %}
  labels:
    evalId: {% if nist_deploy %}{{ '{{ eval_id }}' }}{% else %}{{ eval_id }}{% endif %}
    tier: ta3
spec:
  # NodePort type allows to expose service outside the cluster
  type: NodePort
  selector:
    evalId: {% if nist_deploy %}{{ '{{ eval_id }}' }}{% else %}{{ eval_id }}{% endif %}
    tier: ta3
  ports:
    - name: http
      port: 80
      targetPort: 80
    - name: https
      port: 443
      targetPort: 443
---
# TA3 Service for taking requests from TA2
apiVersion: v1
kind: Service
metadata:
  name: {% if nist_deploy %}{{ '{{ eval_id }}-ta3' }}{% else %}{{ eval_id }}-ta3{% endif %}
  labels:
    evalId: {% if nist_deploy %}{{ '{{ eval_id }}' }}{% else %}{{ eval_id }}{% endif %}
    tier: ta3
spec:
  type: ClusterIP
  # There is a possibility of manually assigning an IP
  ports:
    - port: 5001
      targetPort: 5001
  selector:
    evalId: {% if nist_deploy %}{{ '{{ eval_id }}' }}{% else %}{{ eval_id }}{% endif %}
    tier: ta3
---
# TA3 Pod
apiVersion: v1
kind: Pod
metadata:
  name: {% if nist_deploy %}{{ '{{ eval_id }}-ta3' }}{% else %}{{ eval_id }}-ta3{% endif %}
  labels:
    evalId: {% if nist_deploy %}{{ '{{ eval_id }}' }}{% else %}{{ eval_id }}{% endif %}
    main: "yes"
    tier: ta3
    ta3-main: "yes"
spec:
  restartPolicy: Never
  volumes:
{% if nist_deploy %}
  ##====|Begin| Required Code that NIST uses to pair TA2 and TA3 components |Begin|
    - name: nfs-data
      persistentVolumeClaim:
        claimName: pvc-datasets
    - name: nfs-output
      persistentVolumeClaim:
        claimName: pvc-rw
  ##====|End| Required Code that NIST uses to pair TA2 and TA3 components |End|
  # affinity:
  #   # Link pod affinity with
  #   podAffinity:
  #     requiredDuringSchedulingIgnoredDuringExecution:
  #     - labelSelector:
  #         matchExpressions:
  #         - key: evalId
  #           operator: In
  #           values:
  #           - {{ '{{ eval_id }}' }}'
  #       topologyKey: failure-domain.beta.kubernetes.io/zone
{% else %}
    - name: shared-output
      hostPath:
        path: /tmp/d3m/temp_storage
    - name: shared-input
      hostPath:
        path: /tmp/d3m/dataset
    - name: shared-config
      hostPath:
        path: /tmp/d3m/config
{% endif %}
  containers:
  # TA3 container, entry point for evaluation
  - name: ta3-main
    image: {{ distil_image }}
    imagePullPolicy: Always
{% if nist_deploy %}
    command:
      - {{ '{{ command }}' }}
    args:
      - {{ '{{ command_args }}' }}
{% endif %}
    # web (perhaps nginx) ports
    ports:
      - containerPort: 80
        name: http
        protocol: TCP
      - containerPort: 443
        name: https
        protocol: TCP
      # Additional Port for TA3 to listen to TA2 signals
      - containerPort: 5001
        protocol: TCP
    env:
      # environment variables passed to container
      - name: EVAL_ID
        value: {% if nist_deploy %}{{ '{{ eval_id }}' }}{% else %}{{ eval_id }}{% endif %}
      # Query TA2 Service with service name:
      # {{ '{{ eval_id }}' }}-ta2:45042
      # Query TA3 Service with service name:
      # {{ '{{ eval_id }}' }}-ta3:5001
      - name: TA2_PORT
        value: "45042"
      - name: TA3_PORT
        value: "5001"
      - name: PIPELINE_COMPUTE_ENDPOINT
        value: {% if nist_deploy %}{{ '{{ eval_id }}-ta2:45042' }}{% else %}"localhost:45042"{% endif %}
      - name: PIPELINE_COMPUTE_TRACE
        value: "true"
      - name: PORT
        value: "80"
      - name: RANKING_ENDPOINT
        value: http://localhost:5002
      - name: CLASSIFICATION_ENDPOINT
        value: http://localhost:5000
{% if not nist_deploy %}
      - name: JSON_CONFIG_PATH
        value: /tmp/d3m/config/config.json
{% endif %}
    volumeMounts:
{% if not nist_deploy %}
      - name: shared-input
        mountPath: /tmp/d3m/dataset
        readOnly: true
      - name: shared-output
        mountPath: /tmp/d3m/temp_storage
      - name: shared-config
        mountPath: /tmp/d3m/config
{% else %}
{% raw %}
      ##====|Begin| Required Code that NIST uses to pair TA2 and TA3 components |Begin|
      - name: nfs-data
        mountPath: /inputs
        subPath: {{ path_to_dataroot }}
        readOnly: true
      - name: nfs-output
        mountPath: /outputs
        subPath: {{ path_to_outputs }}
      ##====|End| Required Code that NIST uses to pair TA2 and TA3 components |End|
{% endraw %}
{% endif %}
  # Postgres container - provides access to pre-loaded D3M data
  - name: distil-pg
    image: {{ pg_image }}
    imagePullPolicy: Always
    ports:
      - name: pg-port
        containerPort: 5432
    args: [-d postgres]

  # ElasticSearch container - provides indexing / search on pre-loaded D3M data
  - name: distil-es
    image: {{ es_image }}
    imagePullPolicy: Always
    ports:
      - name: es-port
        containerPort: 9200
    env:
      - name: ES_JAVA_OPTS
        value: -Xmx512m -Xms512m

  # NK semantic typing
  - name: nk-classification
    image: registry.datadrivendiscovery.org/j18_ta1eval/distil/simon:0.5.0
    imagePullPolicy: Always
    ports:
      - name: nk-class-port
        containerPort: 5000
  
  # NK pca-based classification
  - name: nk-ranking
    image: registry.datadrivendiscovery.org/j18_ta1eval/distil/punk_1:0.4
    imagePullPolicy: Always
    ports:
      - name: nk-ranking-port
        containerPort: 5002

{% if not nist_deploy %}
  # Stub ta2 container
  - name: ta2-main
    image: {{ ta2_image }}
    imagePullPolicy: {% if nist_deploy %}Always{% else %}IfNotPresent{% endif %}
    # environment variables passed to container
    env:
      # NIST eval id
      - name: EVAL_ID
        value: {{ eval_id }}
      - name: PIPELINE_SERVER_RESULT_DIR
        value: /tmp/d3m/temp_storage
    ports:
      # gRPC port
      - containerPort: 45042
        protocol: TCP
    volumeMounts:
      - name: shared-output
        mountPath: /tmp/d3m/temp_storage
      - name: shared-config
        mountPath: /tmp/d3m/config
{% endif %}
